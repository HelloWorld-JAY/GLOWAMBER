<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="member">
	<!-- 회원가입 -->
	<insert id="memberInsert" parameterType="memberDTO">

		INSERT INTO MEMBERTABLE(MEMBERNUM ,MEMBERID, MEMBERPASS, MEMBERNAME,MEMBERTEL, MEMBEREMAIL, MEMBERADDR, MEMBERADDRDETAIL, MEMBERJOINDATE, MEMBERAUTH)
		VALUES
		(MEMBERNUM_SEQ.nextval,#{memberId},#{memberPass},#{memberName},#{memberTel},CONCAT(#{memberEmail},#{emailAddr}),
		#{memberAddr},#{memberAddrDetail}  ,sysdate,'0' )
	</insert>
	<!-- 회원가입 유효성 검사 -->


	<!-- 로그인 -->
	<select id="idCheck" parameterType="memberDTO"
		resultType='MemberDTO'>
		SELECT *
		FROM MEMBERTABLE
		WHERE memberid= #{memberId}
		<if test="memberPass != null">
			AND memberpass= #{memberPass}
		</if>
	</select>
	
	<!-- 관리자 페이지 -->
		<!-- 회원 목록 출력 및 검색 -->
		<select id="selectMemberList" resultType="memberDTO" parameterType="memberDTO">
			SELECT	*
			FROM	membertable
			<where>
				<if test="memberName != null">
				 	AND membername like '%${memberName}%'
				</if>
				<if test="memberId != null">
					AND memberid like '%${memberId}%'
				</if>
				<if test="memberTel != null">
					AND membertel like '%${memberTel}%'
				</if>
				<if test="memberJoinDate != null">
					AND memberjoindate like '%${memberJoinDate}%'
				</if>
			</where>
		</select>
		<!-- 회원정보 출력 -->
		<select id="selectMemberInfo" resultType="memberDTO" parameterType="memberDTO">
			SELECT 
			    m.MEMBERNUM AS MEMBERNUM,
			    m.MEMBERNAME AS MEMBERNAME,
			    m.MEMBERID AS MEMBERID,
			    m.MEMBEREMAIL AS MEMBEREMAIL,
			    m.MEMBERTEL AS MEMBERTEL,
			    m.MEMBERADDR AS MEMBERADDR,
			    m.MEMBERADDRDETAIL AS MEMBERADDRDETAIL,
			    m.MEMBERAUTH as MEMBERAUTH,
			    COUNT(o.ordernum) AS TOTALCOUNT,
			    NVL(SUM(od.orderdetailprice * od.orderdetailcount), 0) AS TOTALPRICE
			FROM 
			    MEMBERTABLE m
			LEFT JOIN 
			    ORDERTABLE o ON m.MEMBERNUM = o.MEMBERNUM
			LEFT JOIN 
			    ORDERDETAILTABLE od ON o.ORDERNUM = od.ORDERNUM
			WHERE m.MEMBERNUM = #{memberNum}
			GROUP BY 
			    m.MEMBERNUM, m.MEMBERNAME, m.MEMBERID, m.MEMBEREMAIL, m.MEMBERTEL, m.MEMBERADDR, m.MEMBERADDRDETAIL, m.MEMBERAUTH
		</select>
		
		<!-- 회원권한 수정 -->
	<update id="updateMemberauth" parameterType="memberDTO">
		UPDATE	MEMBERTABLE
		SET		MEMBERAUTH = #{memberAuth}
		WHERE 	MEMBERNUM = #{memberNum}
	</update>
		
		<!-- 카카오 로그인 -->
		<!-- 정보 찾기 -->
	<select id="findKakao" parameterType="java.util.HashMap" resultType="memberDTO">
		select * from MEMBERTABLE where MEMBEREMAIL=#{email, jdbcType=VARCHAR}
	</select>

	<!-- 정보 저장 -->
	<insert id="kakaoInsert" parameterType="java.util.HashMap">
		insert into MEMBERTABLE(MEMBERNUM ,MEMBERID, MEMBERPASS, MEMBERNAME,MEMBERTEL, MEMBEREMAIL, MEMBERJOINDATE, MEMBERAUTH)
			values(MEMBERNUM_SEQ.nextval,#{email, jdbcType=VARCHAR},#{pass, jdbcType=VARCHAR},'0','0',#{email, jdbcType=VARCHAR},sysdate,'0')
	</insert>
	
</mapper> 