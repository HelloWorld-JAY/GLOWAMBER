<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ProductDAO">

	<select id="SelectAllProduct" resultType="ItemDTO">
		SELECT *
		FROM ITEMTABLE
	</select>

	<select id="SelectDetail" resultType="ItemDTO"
		parameterType="ItemDTO">
		SELECT *
		FROM ITEMTABLE
		WHERE itemnum = #{itemNum}
	</select>

	<insert id="InsertCart" parameterType="CartDTO">
		INSERT INTO
		CARTTABLE(CARTNUM,ITEMNUM,CARTITEMCOUNT,CARTADDDATE,GUESTID,MEMBERID)
		VALUES(cartnum_seq.nextval,${itemNum},${cartItemCount},sysdate,
		<if test="memberId == ''">
			#{guestId},
		</if>
		<if test="memberId != ''">
			'',
		</if>
		#{memberId})
	</insert>

	<select id="SelectCartOne" parameterType="CartDTO"
		resultType="CartDTO">
		SELECT *
		FROM CARTTABLE
		WHERE itemnum = #{itemNum}
		<if test="guestId != ''">
			AND guestid = #{guestId}
		</if>
		<if test="memberId != ''">
			AND memberid = #{memberId}
		</if>
	</select>

	<update id="UpdateCart" parameterType="CartDTO">
		<if test="!guestId.equals('') and !memberId.equals('')">
			BEGIN
			MERGE INTO CARTTABLE C
			USING(
			SELECT itemnum,
			cartitemcount ,cartadddate
			FROM CARTTABLE
			WHERE guestid
			= #{guestId}
			) g
			ON (c.itemnum = g.itemnum AND c.memberid = #{memberId})
			WHEN MATCHED
			THEN
			UPDATE SET
			c.cartitemcount = c.cartitemcount + g.cartitemcount
			WHEN NOT MATCHED THEN
			INSERT(CARTNUM,MEMBERID,ITEMNUM,CARTITEMCOUNT,CARTADDDATE)
			VALUES(CARTNUM_SEQ.NEXTVAL,#{memberId},g.itemnum,g.cartitemcount,g.cartadddate);

			DELETE FROM CARTTABLE
			WHERE guestid = #{guestId};
			END;
		</if>
		<if test="!guestId.equals('') and memberId.equals('')">
			UPDATE CARTTABLE
			SET CARTITEMCOUNT = CARTITEMCOUNT +
			#{cartItemCount}
			WHERE guestid = #{guestId} AND itemnum = #{itemNum}
		</if>
		<if test="guestId.equals('') and !memberId.equals('')">
			UPDATE CARTTABLE
			SET CARTITEMCOUNT = CARTITEMCOUNT +
			#{cartItemCount}
			WHERE memberid = #{memberId} AND itemnum = #{itemNum}
		</if>
	</update>
	<!-- 상품목록 페이징 처리 -->
	<select id="SelectProductPage" parameterType="ItemDTO"
		resultType="int">
		SELECT COUNT(*)
		FROM ITEMTABLE
		<where>
			<if test="selectKeyword != null and selectKeyword != ''">
				itemname LIKE '%' || #{selectKeyword} || '%'
			</if>
			<if test="bigCateNum != null">
				AND bigcatenum = #{bigCateNum}
			</if>
			<if test="smallCateNum != null">
				AND smallcatenum = #{smallCateNum}
			</if>
		</where>
	</select>

	<!-- 베스트상품목록 출력 -->
	<select id="SelectBestList" parameterType="HashMap"
		resultType="ItemDTO">
		SELECT * FROM(
		SELECT ROWNUM RN, I.* FROM(
		SELECT i.*
		FROM (
		SELECT
		ITEMNUM
		FROM ORDERDETAILTABLE
		GROUP BY ITEMNUM
		ORDER BY
		SUM(ORDERDETAILCOUNT) DESC
		) o
		INNER JOIN ITEMTABLE i ON o.ITEMNUM =
		i.ITEMNUM
		WHERE ROWNUM &lt;= 100
		) i
		)
		<if test="startRow != null">
			WHERE RN BETWEEN #{startRow} AND #{endRow}
		</if>
	</select>
	<!-- 신상품 상품목록 출력 -->
	<select id="SelectNewList" parameterType="HashMap"
		resultType="ItemDTO">
		SELECT * FROM (
		SELECT ROWNUM RN, i.*
		FROM (
		SELECT *
		FROM ITEMTABLE
		ORDER BY ITEMDATE DESC
		) i
		WHERE ROWNUM &lt;= 100
		)
		<if test="startRow != null">
			WHERE RN BETWEEN #{startRow} AND #{endRow}
		</if>
	</select>
	<!-- 상품목록 출력 -->
	<select id="SelectProductList" parameterType="HashMap"
		resultType="ItemDTO">
		SELECT * FROM (
		SELECT ROWNUM RN, ITEM.* FROM(
		SELECT *
		FROM ITEMTABLE
		<where>
			<if test="selectKeyword != null and selectKeyword != ''">
				itemname LIKE '%' || #{selectKeyword} || '%'
			</if>
			<if test="bigCateNum != null">
				AND bigcatenum = #{bigCateNum}
			</if>
			<if test="smallCateNum != null">
				AND smallcatenum = #{smallCateNum}
			</if>
		</where>
		<choose>
			<when test="arr == 'date'">
				ORDER BY itemdate DESC
			</when>
			<when test="arr == 'korean'">
				order by itemname ASC
			</when>
			<when test="arr == 'price'">
				ORDER BY itemprice DESC
			</when>
			<otherwise>
				ORDER BY itemdate DESC
			</otherwise>
		</choose>
		)ITEM
		)WHERE RN BETWEEN #{startRow} AND #{endRow}
	</select>

	<select id="SelectCate" parameterType="ItemDTO"
		resultType="HashMap">
		SELECT
		s.smallcatename AS smallcatename,
		s.smallcatenum AS smallcatenum,
		b.bigcatenum AS bigcatenum,
		b.bigcatename AS bigcatename
		FROM
		smallcatetable s
		INNER JOIN
		bigcatetable b
		ON s.bigcatenum = b.bigcatenum
		<where>
			<if test="bigCateNum != null">
				AND s.bigcatenum = #{bigCateNum}
			</if>
			<if test="smallCateNum != null">
				AND s.bigcatenum = (
				SELECT bigcatenum
				FROM smallcatetable
				WHERE smallcatenum = #{smallCateNum})
			</if>
		</where>
		ORDER BY smallcatenum asc
	</select>

	<select id="PageProductCount">
		SELECT COUNT(*)
		FROM ITEMTABLE
		<where>
			<if test="bigCateNum != null">
				AND bigcatenum = #{bigCateNum}
			</if>
			<if test="smallCateNum != null">
				AND smallcatenum = #{smallCateNum}
			</if>
		</where>

	</select>

	<!-- 베스트 상품 카운터 -->
	<select id="BestProductCount" resultType="Integer">
		SELECT count(ITEMNUM)
		FROM (
		SELECT ITEMNUM
		FROM(
		SELECT ITEMNUM
		FROM ORDERDETAILTABLE
		GROUP BY
		ITEMNUM
		ORDER BY SUM(ORDERDETAILCOUNT) DESC
		)
		WHERE ROWNUM &lt;= 100
		)
	</select>
	<!-- 신상품 카운터 -->
	<select id="NewProductCount" resultType="Integer">
		SELECT count(ITEMNUM)
		FROM (
		SELECT ITEMNUM
		FROM ITEMTABLE
		ORDER BY ITEMDATE DESC
		)
		WHERE ROWNUM
		&lt;= 100
	</select>
</mapper>